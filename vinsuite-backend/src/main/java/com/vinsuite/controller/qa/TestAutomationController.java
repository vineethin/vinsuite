package com.vinsuite.controller.qa;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.reactive.function.client.WebClient;

import com.vinsuite.dto.qa.AutomationRequest;

import reactor.core.publisher.Mono;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/automation")
public class TestAutomationController {

    @Value("${groq.api.key}")
    private String groqApiKey;

    @Value("${groq.model.name}")
    private String groqModelName;

    private final WebClient webClient;

    public TestAutomationController() {
        this.webClient = WebClient.builder()
                .baseUrl("https://api.groq.com/openai/v1/chat/completions")
                .build();
    }

    @PostMapping("/generate")
    public Mono<ResponseEntity<String>> generateAutomationScript(@RequestBody AutomationRequest request) {
        String prompt = String.format(
                "You are a test automation expert. Convert the following manual test case and HTML into an automated Selenium script using %s and %s.\n\n"
                        +
                        "Manual Test Case:\n%s\n\nHTML Code:\n%s\n\nUse appropriate annotations. Output only the code.",
                request.getLanguage(), request.getFramework(), request.getTestCase(), request.getHtmlCode());

        Map<String, Object> requestBody = Map.of(
                "model", groqModelName,
                "messages", List.of(
                        Map.of("role", "user", "content", prompt)));

        return webClient.post()
                .header("Authorization", "Bearer " + groqApiKey)
                .header("Content-Type", "application/json")
                .bodyValue(requestBody)
                .retrieve()
                .bodyToMono(Map.class)
                .map(response -> {
                    List choices = (List) response.get("choices");
                    if (choices != null && !choices.isEmpty()) {
                        Map<String, Object> message = (Map<String, Object>) ((Map<?, ?>) choices.get(0)).get("message");
                        String content = (String) message.get("content");
                        return ResponseEntity.ok(content.trim());
                    } else {
                        return ResponseEntity.ok("// No code generated by Groq.");
                    }
                })
                .onErrorReturn(ResponseEntity.ok("// Error: Unable to generate script via Groq."));
    }
}
